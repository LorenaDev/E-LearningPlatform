#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace E_Learning
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FacultateaE")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGrupe(Grupe instance);
    partial void UpdateGrupe(Grupe instance);
    partial void DeleteGrupe(Grupe instance);
    partial void InsertMaterii(Materii instance);
    partial void UpdateMaterii(Materii instance);
    partial void DeleteMaterii(Materii instance);
    partial void InsertProfesori(Profesori instance);
    partial void UpdateProfesori(Profesori instance);
    partial void DeleteProfesori(Profesori instance);
    partial void InsertStudenti(Studenti instance);
    partial void UpdateStudenti(Studenti instance);
    partial void DeleteStudenti(Studenti instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::E_Learning.Properties.Settings.Default.FacultateaEConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Grupe> Grupes
		{
			get
			{
				return this.GetTable<Grupe>();
			}
		}
		
		public System.Data.Linq.Table<Materii> Materiis
		{
			get
			{
				return this.GetTable<Materii>();
			}
		}
		
		public System.Data.Linq.Table<Profesori> Profesoris
		{
			get
			{
				return this.GetTable<Profesori>();
			}
		}
		
		public System.Data.Linq.Table<Studenti> Studentis
		{
			get
			{
				return this.GetTable<Studenti>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grupe")]
	public partial class Grupe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_grupa;
		
		private string _NumeGrupa;
		
		private System.Nullable<int> _NumarStudenti;
		
		private EntityRef<Materii> _Materii;
		
		private EntitySet<Studenti> _Studentis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_grupaChanging(int value);
    partial void OnID_grupaChanged();
    partial void OnNumeGrupaChanging(string value);
    partial void OnNumeGrupaChanged();
    partial void OnNumarStudentiChanging(System.Nullable<int> value);
    partial void OnNumarStudentiChanged();
    #endregion
		
		public Grupe()
		{
			this._Materii = default(EntityRef<Materii>);
			this._Studentis = new EntitySet<Studenti>(new Action<Studenti>(this.attach_Studentis), new Action<Studenti>(this.detach_Studentis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_grupa", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_grupa
		{
			get
			{
				return this._ID_grupa;
			}
			set
			{
				if ((this._ID_grupa != value))
				{
					this.OnID_grupaChanging(value);
					this.SendPropertyChanging();
					this._ID_grupa = value;
					this.SendPropertyChanged("ID_grupa");
					this.OnID_grupaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeGrupa", DbType="NChar(10)")]
		public string NumeGrupa
		{
			get
			{
				return this._NumeGrupa;
			}
			set
			{
				if ((this._NumeGrupa != value))
				{
					this.OnNumeGrupaChanging(value);
					this.SendPropertyChanging();
					this._NumeGrupa = value;
					this.SendPropertyChanged("NumeGrupa");
					this.OnNumeGrupaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumarStudenti", DbType="Int")]
		public System.Nullable<int> NumarStudenti
		{
			get
			{
				return this._NumarStudenti;
			}
			set
			{
				if ((this._NumarStudenti != value))
				{
					this.OnNumarStudentiChanging(value);
					this.SendPropertyChanging();
					this._NumarStudenti = value;
					this.SendPropertyChanged("NumarStudenti");
					this.OnNumarStudentiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupe_Materii", Storage="_Materii", ThisKey="ID_grupa", OtherKey="ID_materie", IsUnique=true, IsForeignKey=false)]
		public Materii Materii
		{
			get
			{
				return this._Materii.Entity;
			}
			set
			{
				Materii previousValue = this._Materii.Entity;
				if (((previousValue != value) 
							|| (this._Materii.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Materii.Entity = null;
						previousValue.Grupe = null;
					}
					this._Materii.Entity = value;
					if ((value != null))
					{
						value.Grupe = this;
					}
					this.SendPropertyChanged("Materii");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupe_Studenti", Storage="_Studentis", ThisKey="ID_grupa", OtherKey="Grupa")]
		public EntitySet<Studenti> Studentis
		{
			get
			{
				return this._Studentis;
			}
			set
			{
				this._Studentis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Studentis(Studenti entity)
		{
			this.SendPropertyChanging();
			entity.Grupe = this;
		}
		
		private void detach_Studentis(Studenti entity)
		{
			this.SendPropertyChanging();
			entity.Grupe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Materii")]
	public partial class Materii : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_materie;
		
		private System.Nullable<int> _ID_Grup;
		
		private string _Denumire;
		
		private System.Nullable<int> _ProfCurs;
		
		private System.Nullable<int> _ProfLaborator;
		
		private EntityRef<Grupe> _Grupe;
		
		private EntityRef<Profesori> _Profesori;
		
		private EntityRef<Profesori> _Profesori1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_materieChanging(int value);
    partial void OnID_materieChanged();
    partial void OnID_GrupChanging(System.Nullable<int> value);
    partial void OnID_GrupChanged();
    partial void OnDenumireChanging(string value);
    partial void OnDenumireChanged();
    partial void OnProfCursChanging(System.Nullable<int> value);
    partial void OnProfCursChanged();
    partial void OnProfLaboratorChanging(System.Nullable<int> value);
    partial void OnProfLaboratorChanged();
    #endregion
		
		public Materii()
		{
			this._Grupe = default(EntityRef<Grupe>);
			this._Profesori = default(EntityRef<Profesori>);
			this._Profesori1 = default(EntityRef<Profesori>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_materie", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_materie
		{
			get
			{
				return this._ID_materie;
			}
			set
			{
				if ((this._ID_materie != value))
				{
					if (this._Grupe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_materieChanging(value);
					this.SendPropertyChanging();
					this._ID_materie = value;
					this.SendPropertyChanged("ID_materie");
					this.OnID_materieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Grup", DbType="Int")]
		public System.Nullable<int> ID_Grup
		{
			get
			{
				return this._ID_Grup;
			}
			set
			{
				if ((this._ID_Grup != value))
				{
					this.OnID_GrupChanging(value);
					this.SendPropertyChanging();
					this._ID_Grup = value;
					this.SendPropertyChanged("ID_Grup");
					this.OnID_GrupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denumire", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Denumire
		{
			get
			{
				return this._Denumire;
			}
			set
			{
				if ((this._Denumire != value))
				{
					this.OnDenumireChanging(value);
					this.SendPropertyChanging();
					this._Denumire = value;
					this.SendPropertyChanged("Denumire");
					this.OnDenumireChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfCurs", DbType="Int")]
		public System.Nullable<int> ProfCurs
		{
			get
			{
				return this._ProfCurs;
			}
			set
			{
				if ((this._ProfCurs != value))
				{
					if (this._Profesori.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfCursChanging(value);
					this.SendPropertyChanging();
					this._ProfCurs = value;
					this.SendPropertyChanged("ProfCurs");
					this.OnProfCursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfLaborator", DbType="Int")]
		public System.Nullable<int> ProfLaborator
		{
			get
			{
				return this._ProfLaborator;
			}
			set
			{
				if ((this._ProfLaborator != value))
				{
					if (this._Profesori1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfLaboratorChanging(value);
					this.SendPropertyChanging();
					this._ProfLaborator = value;
					this.SendPropertyChanged("ProfLaborator");
					this.OnProfLaboratorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupe_Materii", Storage="_Grupe", ThisKey="ID_materie", OtherKey="ID_grupa", IsForeignKey=true)]
		public Grupe Grupe
		{
			get
			{
				return this._Grupe.Entity;
			}
			set
			{
				Grupe previousValue = this._Grupe.Entity;
				if (((previousValue != value) 
							|| (this._Grupe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupe.Entity = null;
						previousValue.Materii = null;
					}
					this._Grupe.Entity = value;
					if ((value != null))
					{
						value.Materii = this;
						this._ID_materie = value.ID_grupa;
					}
					else
					{
						this._ID_materie = default(int);
					}
					this.SendPropertyChanged("Grupe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesori_Materii", Storage="_Profesori", ThisKey="ProfCurs", OtherKey="ID_prof", IsForeignKey=true)]
		public Profesori Profesori
		{
			get
			{
				return this._Profesori.Entity;
			}
			set
			{
				Profesori previousValue = this._Profesori.Entity;
				if (((previousValue != value) 
							|| (this._Profesori.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profesori.Entity = null;
						previousValue.Materiis.Remove(this);
					}
					this._Profesori.Entity = value;
					if ((value != null))
					{
						value.Materiis.Add(this);
						this._ProfCurs = value.ID_prof;
					}
					else
					{
						this._ProfCurs = default(Nullable<int>);
					}
					this.SendPropertyChanged("Profesori");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesori_Materii1", Storage="_Profesori1", ThisKey="ProfLaborator", OtherKey="ID_prof", IsForeignKey=true)]
		public Profesori Profesori1
		{
			get
			{
				return this._Profesori1.Entity;
			}
			set
			{
				Profesori previousValue = this._Profesori1.Entity;
				if (((previousValue != value) 
							|| (this._Profesori1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profesori1.Entity = null;
						previousValue.Materiis1.Remove(this);
					}
					this._Profesori1.Entity = value;
					if ((value != null))
					{
						value.Materiis1.Add(this);
						this._ProfLaborator = value.ID_prof;
					}
					else
					{
						this._ProfLaborator = default(Nullable<int>);
					}
					this.SendPropertyChanged("Profesori1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profesori")]
	public partial class Profesori : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_prof;
		
		private string _Nume;
		
		private string _Prenume;
		
		private EntitySet<Materii> _Materiis;
		
		private EntitySet<Materii> _Materiis1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_profChanging(int value);
    partial void OnID_profChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnPrenumeChanging(string value);
    partial void OnPrenumeChanged();
    #endregion
		
		public Profesori()
		{
			this._Materiis = new EntitySet<Materii>(new Action<Materii>(this.attach_Materiis), new Action<Materii>(this.detach_Materiis));
			this._Materiis1 = new EntitySet<Materii>(new Action<Materii>(this.attach_Materiis1), new Action<Materii>(this.detach_Materiis1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_prof", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_prof
		{
			get
			{
				return this._ID_prof;
			}
			set
			{
				if ((this._ID_prof != value))
				{
					this.OnID_profChanging(value);
					this.SendPropertyChanging();
					this._ID_prof = value;
					this.SendPropertyChanged("ID_prof");
					this.OnID_profChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="NVarChar(50)")]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenume", DbType="NVarChar(50)")]
		public string Prenume
		{
			get
			{
				return this._Prenume;
			}
			set
			{
				if ((this._Prenume != value))
				{
					this.OnPrenumeChanging(value);
					this.SendPropertyChanging();
					this._Prenume = value;
					this.SendPropertyChanged("Prenume");
					this.OnPrenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesori_Materii", Storage="_Materiis", ThisKey="ID_prof", OtherKey="ProfCurs")]
		public EntitySet<Materii> Materiis
		{
			get
			{
				return this._Materiis;
			}
			set
			{
				this._Materiis.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profesori_Materii1", Storage="_Materiis1", ThisKey="ID_prof", OtherKey="ProfLaborator")]
		public EntitySet<Materii> Materiis1
		{
			get
			{
				return this._Materiis1;
			}
			set
			{
				this._Materiis1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Materiis(Materii entity)
		{
			this.SendPropertyChanging();
			entity.Profesori = this;
		}
		
		private void detach_Materiis(Materii entity)
		{
			this.SendPropertyChanging();
			entity.Profesori = null;
		}
		
		private void attach_Materiis1(Materii entity)
		{
			this.SendPropertyChanging();
			entity.Profesori1 = this;
		}
		
		private void detach_Materiis1(Materii entity)
		{
			this.SendPropertyChanging();
			entity.Profesori1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Studenti")]
	public partial class Studenti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_stud;
		
		private string _Nume;
		
		private string _Prenume;
		
		private int _Grupa;
		
		private string _Grad;
		
		private EntityRef<Grupe> _Grupe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_studChanging(int value);
    partial void OnID_studChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnPrenumeChanging(string value);
    partial void OnPrenumeChanged();
    partial void OnGrupaChanging(int value);
    partial void OnGrupaChanged();
    partial void OnGradChanging(string value);
    partial void OnGradChanged();
    #endregion
		
		public Studenti()
		{
			this._Grupe = default(EntityRef<Grupe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_stud", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_stud
		{
			get
			{
				return this._ID_stud;
			}
			set
			{
				if ((this._ID_stud != value))
				{
					this.OnID_studChanging(value);
					this.SendPropertyChanging();
					this._ID_stud = value;
					this.SendPropertyChanged("ID_stud");
					this.OnID_studChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenume", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Prenume
		{
			get
			{
				return this._Prenume;
			}
			set
			{
				if ((this._Prenume != value))
				{
					this.OnPrenumeChanging(value);
					this.SendPropertyChanging();
					this._Prenume = value;
					this.SendPropertyChanged("Prenume");
					this.OnPrenumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grupa", DbType="Int NOT NULL")]
		public int Grupa
		{
			get
			{
				return this._Grupa;
			}
			set
			{
				if ((this._Grupa != value))
				{
					if (this._Grupe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGrupaChanging(value);
					this.SendPropertyChanging();
					this._Grupa = value;
					this.SendPropertyChanged("Grupa");
					this.OnGrupaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grad", DbType="NChar(10)")]
		public string Grad
		{
			get
			{
				return this._Grad;
			}
			set
			{
				if ((this._Grad != value))
				{
					this.OnGradChanging(value);
					this.SendPropertyChanging();
					this._Grad = value;
					this.SendPropertyChanged("Grad");
					this.OnGradChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Grupe_Studenti", Storage="_Grupe", ThisKey="Grupa", OtherKey="ID_grupa", IsForeignKey=true)]
		public Grupe Grupe
		{
			get
			{
				return this._Grupe.Entity;
			}
			set
			{
				Grupe previousValue = this._Grupe.Entity;
				if (((previousValue != value) 
							|| (this._Grupe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Grupe.Entity = null;
						previousValue.Studentis.Remove(this);
					}
					this._Grupe.Entity = value;
					if ((value != null))
					{
						value.Studentis.Add(this);
						this._Grupa = value.ID_grupa;
					}
					else
					{
						this._Grupa = default(int);
					}
					this.SendPropertyChanged("Grupe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
